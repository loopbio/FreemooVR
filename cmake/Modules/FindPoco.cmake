#
# Try to find Poco's libraries, and include path.
# Once done this will define:
#
# POCO_FOUND = Poco found. 
# POCO_INCLUDE_PATHS = Poco include directories.
# POCO_LIBRARIES = libraries that are needed to use Poco.
# 

SET(LIBRARY_PATHS 
	/usr/lib)

FIND_PATH(POCO_INCLUDE_PATH Path.h
  PATH_SUFFIXES Poco
  /usr/include)

FIND_LIBRARY(POCO_FOUNDATION_LIBRARY 
	NAMES PocoFoundation
	PATHS ${LIBRARY_PATHS})

FIND_LIBRARY(POCO_UTIL_LIBRARY
	NAMES PocoUtil
	PATHS ${LIBRARY_PATHS})

FIND_LIBRARY(POCO_NET_LIBRARY
	NAMES PocoNet
	PATHS ${LIBRARY_PATHS})

IF (POCO_INCLUDE_PATH AND POCO_FOUNDATION_LIBRARY AND POCO_UTIL_LIBRARY)
	SET(POCO_FOUND TRUE)
	SET(POCO_INCLUDE_PATHS ${POCO_INCLUDE_PATH} CACHE STRING "The include paths needed to use Poco")
	SET(POCO_LIBRARIES ${POCO_FOUNDATION_LIBRARY} ${POCO_UTIL_LIBRARY} CACHE STRING "The libraries needed to use Poco")
ENDIF (POCO_INCLUDE_PATH AND POCO_FOUNDATION_LIBRARY AND POCO_UTIL_LIBRARY)

IF(POCO_FOUND)
	IF(NOT POCO_FIND_QUIETLY)
		MESSAGE(STATUS "Found Poco: ${POCO_FOUNDATION_LIBRARY}")
	ENDIF(NOT POCO_FIND_QUIETLY)
ELSE(POCO_FOUND)
	IF(POCO_FIND_REQUIRED)
		MESSAGE(FATAL_ERROR "Could not find Poco library")
	ENDIF(POCO_FIND_REQUIRED)
ENDIF(POCO_FOUND)

MARK_AS_ADVANCED(
	POCO_INCLUDE_PATHS
	POCO_LIBRARIES)
